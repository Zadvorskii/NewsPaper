from news.models import *

1
# Создать двух пользователей (с помощью метода User.objects.create_user('username')).
user1 = User.objects.create_user('Sergey')
user2 = User.objects.create_user('Alexandr')


2
# Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(author = user1)
Author.objects.create(author = user2)

Author1 = Author.objects.get(id = 1)
Author2 = Author.objects.get(id = 2)


3
# Добавить 4 категории в модель Category.
Category.objects.create(name_category = 'Спорт')
Category.objects.create(name_category = 'Леди')
Category.objects.create(name_category = 'Авто')
Category.objects.create(name_category = 'Кино')

category1 = Category.objects.get(id = 1)
category2 = Category.objects.get(id = 2)
category3 = Category.objects.get(id = 3)
category4 = Category.objects.get(id = 4)


4
#Добавить 2 статьи и 1 новость.
Post.objects.create(author_post = Author1, choice='NE', heading='Трусова должна была стать чемпионкой. Разбираемся, как судили девушек на Олимпиаде', text = 'Александра Трусова была в шаге от золота Олимпийских игр, но ей даже с пятью квадами так и не позволили взойти на верхнюю ступень пьедестала. На неё поднялась Анна Щербакова, сделавшая два четверных флипа. Саша выиграла битву, но проиграла войну.Хотя… здесь неуместно слово проиграла. В любой другой вселенной Саша была бы чемпионкой, но, к сожалению, не в нашей. Не в той вселенной, где одной спортсменке лёгким движением руки срезают баллы, а другой с такой же лёгкостью всё щедро приумножают. А потомболельщики щипают себя, пытаясь понять, как пять квадов могут проиграть двум.Саше, добившейся на пекинском льду столь невероятного достижения, откровенно пожалели баллов. Снизили всё, что могли, и глазом не моргнули.')

 Post.objects.create(author_post = Author2, choice = 'AR', heading = 'Новый дизайн Renault — первое изображение', text = 'Компания Renault опубликовала первое изображение нового концепт-кара, который пока даже не имеет названия, а все что известно о технической начинке — это то, что машина работает на водороде.По этой картинкеможно составить некоторое представление о том, какой дизайнерский курс выбрала Renault на ближайшие годы. Руководил разработкой директор Renault по дизайну Жиль Видаль, пришедший два года назад из PSA.Утверждается, что это будет «не имеющий аналогов концепт-кар на водородном топливе», подтверждающий планы Renault по декарбонизации и отмечающий прогресс в сфере экономики замкнутого цикла, восстановленных и перерабатываемых материалов.')

Post.objects.create(author_post = Author2, choice = 'AR', heading = 'Прилучный рассказал, когда выйдет новый «Мажор»', text = 'Актер Павел Прилучный в инстаграмерассказал, когда выйдет новый сезон сериала «Мажор», в котором он играет главную роль, и опубликовал трейлер.По словам Прилучного, премьера состоится уже весной 2022года. «Вы давно этого ждали, много раз спрашивали меня, когда выйдет новый сезон. Дождались. Мажору быть. Ждите в марте…» — написал он.В новых сериях сюжет будет развиваться спустя 9 лет после событий третьего сезона. Игорь узнает, что именно он является отцом Сони, дочери его возлюбленной Вики, убитой в конце третьего сезона. Онудочеряет девочку, но сестра Вики, вместе с мужем заботившаяся о Соне все это время, не намерена сдаваться и нанимает адвокатов.')

post1 = Post.objects.get(id = 1)
post2 = Post.objects.get(id = 2)
post3 = Post.objects.get(id = 3)


5
# Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
post1.category.add(category1)
post1.category.add (category2)

post2.category.add(category3)
post2.category.add(category4)

post3.category.add(category1)
post3.category.add(category3)


6
#Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(comment_post = post1, comment_user = Author1.author, text_comment = 'Наши лучшие, судью на мыло')
Comment.objects.create(comment_post = post2, comment_user = Author1.author, text_comment = 'Это наше будущее!!!')
Comment.objects.create(comment_post = post3, comment_user = Author2.author, text_comment =' Не интересное кино')
Comment.objects.create(comment_post = post2, comment_user = Author1.author, text_comment =' Ведро с болтами')

comment1 = Comment.odjects.get(id=1)
comment2 = Comment.odjects.get(id=2)
comment3 = Comment.odjects.get(id=3)
comment4 = Comment.odjects.get(id=4)



7
# Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
post1.like_post()
post1.like_post()
post2.like_post()
post2.like_post()
post3.like_post()
post3.like_post()

post1.dislike_post()
post2.dislike_post()
post3.dislike_post()
post1.dislike_post()
post2.dislike_post()

comment1.like_com()
comment1.like_com()
comment1.like_com()
comment3.like_com()
comment2.like_com()
comment4.like_com()
comment4.like_com()
comment3.like_com()
comment1.like_com()

comment1.dislike_com()
comment1.dislike_com()
comment2.dislike_com()
comment3.dislike_com()
comment4.dislike_com()

post1.rating_post
post2.rating_post
post3.rating_post

comment1.rating_comment
comment2.rating_comment
comment3.rating_comment
comment4.rating_comment

8
# Обновить рейтинги пользователей.
Author.objects.get(id=1).update_rating()
Author.objects.get(id=2).update_rating()


9
#
a = Author.objects.order_by('-rating_author')[0]
a.author.username
a.rating_author


10
#вывести лучшую статью
p = Post.objects.order_by('-rating_post')[0]
p.author_post.author.username
p.datetime_post
p.heading
p.preview()


11
# Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
c = Comment.objects.order_by('-rating_comment')[0]
c.datetime_com
c.comment_user.username
c.rating_comment
c.text_comment